//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HOSTModel", "FormQuestion", "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOST_Admin.Models.Form), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOST_Admin.Models.Question))]
[assembly: EdmRelationshipAttribute("HOSTModel", "LikertScaleQuestionLabel", "LikertScaleQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOST_Admin.Models.LikertScaleQuestion), "Label", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOST_Admin.Models.Label))]
[assembly: EdmRelationshipAttribute("HOSTModel", "ChoiceQuestionOption", "ChoiceQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOST_Admin.Models.ChoiceQuestion), "Option", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOST_Admin.Models.Option))]
[assembly: EdmRelationshipAttribute("HOSTModel", "RoleUser", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOST_Admin.Models.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOST_Admin.Models.User))]
[assembly: EdmRelationshipAttribute("HOSTModel", "QuestionHelpImage", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOST_Admin.Models.Question), "HelpImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOST_Admin.Models.HelpImage))]

#endregion

namespace HOST_Admin.Models
{
    #region Contexts
    public partial interface IHOSTDataContext
    {
                IObjectSet<Form> Forms { get; }
                IObjectSet<User> Users { get; }
                IObjectSet<Question> Questions { get; }
                IObjectSet<Option> Options { get; }
                IObjectSet<Label> Labels { get; }
                IObjectSet<Role> Roles { get; }
                IObjectSet<Configuration> Configurations { get; }
                IObjectSet<HelpImage> HelpImages { get; }
                int SaveChanges();
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HOSTDataContext : ObjectContext, IHOSTDataContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HOSTDataContext object using the connection string found in the 'HOSTDataContext' section of the application configuration file.
        /// </summary>
        public HOSTDataContext() : base("name=HOSTDataContext", "HOSTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HOSTDataContext object.
        /// </summary>
        public HOSTDataContext(string connectionString) : base(connectionString, "HOSTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HOSTDataContext object.
        /// </summary>
        public HOSTDataContext(EntityConnection connection) : base(connection, "HOSTDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Form> Forms
        {
            get
            {
                if ((_Forms == null))
                {
                    _Forms = base.CreateObjectSet<Form>("Forms");
                }
                return _Forms;
            }
        }
        private IObjectSet<Form> _Forms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private IObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private IObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Option> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Option>("Options");
                }
                return _Options;
            }
        }
        private IObjectSet<Option> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Label> Labels
        {
            get
            {
                if ((_Labels == null))
                {
                    _Labels = base.CreateObjectSet<Label>("Labels");
                }
                return _Labels;
            }
        }
        private IObjectSet<Label> _Labels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private IObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Configuration> Configurations
        {
            get
            {
                if ((_Configurations == null))
                {
                    _Configurations = base.CreateObjectSet<Configuration>("Configurations");
                }
                return _Configurations;
            }
        }
        private IObjectSet<Configuration> _Configurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<HelpImage> HelpImages
        {
            get
            {
                if ((_HelpImages == null))
                {
                    _HelpImages = base.CreateObjectSet<HelpImage>("HelpImages");
                }
                return _HelpImages;
            }
        }
        private IObjectSet<HelpImage> _HelpImages;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForms(Form form)
        {
            base.AddObject("Forms", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Option option)
        {
            base.AddObject("Options", option);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Labels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLabels(Label label)
        {
            base.AddObject("Labels", label);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurations(Configuration configuration)
        {
            base.AddObject("Configurations", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HelpImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHelpImages(HelpImage helpImage)
        {
            base.AddObject("HelpImages", helpImage);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="ChoiceQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceQuestion object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ChoiceQuestion CreateChoiceQuestion(global::System.Int32 questionId, global::System.Int32 sortOrder)
        {
            ChoiceQuestion choiceQuestion = new ChoiceQuestion();
            choiceQuestion.QuestionId = questionId;
            choiceQuestion.SortOrder = sortOrder;
            return choiceQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private Nullable<global::System.Boolean> _Other = false;
        partial void OnOtherChanging(Nullable<global::System.Boolean> value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Multiple
        {
            get
            {
                return _Multiple;
            }
            set
            {
                OnMultipleChanging(value);
                ReportPropertyChanging("Multiple");
                _Multiple = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiple");
                OnMultipleChanged();
            }
        }
        private Nullable<global::System.Boolean> _Multiple;
        partial void OnMultipleChanging(Nullable<global::System.Boolean> value);
        partial void OnMultipleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "ChoiceQuestionOption", "Option")]
        public EntityCollection<Option> Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Option>("HOSTModel.ChoiceQuestionOption", "Option");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Option>("HOSTModel.ChoiceQuestionOption", "Option", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="configurationId">Initial value of the ConfigurationId property.</param>
        public static Configuration CreateConfiguration(global::System.Int32 configurationId)
        {
            Configuration configuration = new Configuration();
            configuration.ConfigurationId = configurationId;
            return configuration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SharePointUserName
        {
            get
            {
                return _SharePointUserName;
            }
            set
            {
                OnSharePointUserNameChanging(value);
                ReportPropertyChanging("SharePointUserName");
                _SharePointUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SharePointUserName");
                OnSharePointUserNameChanged();
            }
        }
        private global::System.String _SharePointUserName;
        partial void OnSharePointUserNameChanging(global::System.String value);
        partial void OnSharePointUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SharePointPassword
        {
            get
            {
                return _SharePointPassword;
            }
            set
            {
                OnSharePointPasswordChanging(value);
                ReportPropertyChanging("SharePointPassword");
                _SharePointPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SharePointPassword");
                OnSharePointPasswordChanged();
            }
        }
        private global::System.String _SharePointPassword;
        partial void OnSharePointPasswordChanging(global::System.String value);
        partial void OnSharePointPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SharePointURL
        {
            get
            {
                return _SharePointURL;
            }
            set
            {
                OnSharePointURLChanging(value);
                ReportPropertyChanging("SharePointURL");
                _SharePointURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SharePointURL");
                OnSharePointURLChanged();
            }
        }
        private global::System.String _SharePointURL;
        partial void OnSharePointURLChanging(global::System.String value);
        partial void OnSharePointURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationId
        {
            get
            {
                return _ConfigurationId;
            }
            set
            {
                if (_ConfigurationId != value)
                {
                    OnConfigurationIdChanging(value);
                    ReportPropertyChanging("ConfigurationId");
                    _ConfigurationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigurationId");
                    OnConfigurationIdChanged();
                }
            }
        }
        private global::System.Int32 _ConfigurationId;
        partial void OnConfigurationIdChanging(global::System.Int32 value);
        partial void OnConfigurationIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="formId">Initial value of the FormId property.</param>
        public static Form CreateForm(global::System.Int32 formId)
        {
            Form form = new Form();
            form.FormId = formId;
            return form;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormId
        {
            get
            {
                return _FormId;
            }
            set
            {
                if (_FormId != value)
                {
                    OnFormIdChanging(value);
                    ReportPropertyChanging("FormId");
                    _FormId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormId");
                    OnFormIdChanged();
                }
            }
        }
        private global::System.Int32 _FormId;
        partial void OnFormIdChanging(global::System.Int32 value);
        partial void OnFormIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AutoUpdate
        {
            get
            {
                return _AutoUpdate;
            }
            set
            {
                OnAutoUpdateChanging(value);
                ReportPropertyChanging("AutoUpdate");
                _AutoUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoUpdate");
                OnAutoUpdateChanged();
            }
        }
        private Nullable<global::System.Boolean> _AutoUpdate;
        partial void OnAutoUpdateChanging(Nullable<global::System.Boolean> value);
        partial void OnAutoUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = false;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ListName
        {
            get
            {
                return _ListName;
            }
            set
            {
                OnListNameChanging(value);
                ReportPropertyChanging("ListName");
                _ListName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ListName");
                OnListNameChanged();
            }
        }
        private global::System.String _ListName;
        partial void OnListNameChanging(global::System.String value);
        partial void OnListNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyField
        {
            get
            {
                return _KeyField;
            }
            set
            {
                OnKeyFieldChanging(value);
                ReportPropertyChanging("KeyField");
                _KeyField = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyField");
                OnKeyFieldChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyField;
        partial void OnKeyFieldChanging(Nullable<global::System.Int32> value);
        partial void OnKeyFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilledDateFieldName
        {
            get
            {
                return _FilledDateFieldName;
            }
            set
            {
                OnFilledDateFieldNameChanging(value);
                ReportPropertyChanging("FilledDateFieldName");
                _FilledDateFieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilledDateFieldName");
                OnFilledDateFieldNameChanged();
            }
        }
        private global::System.String _FilledDateFieldName;
        partial void OnFilledDateFieldNameChanging(global::System.String value);
        partial void OnFilledDateFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilledDateFieldType
        {
            get
            {
                return _FilledDateFieldType;
            }
            set
            {
                OnFilledDateFieldTypeChanging(value);
                ReportPropertyChanging("FilledDateFieldType");
                _FilledDateFieldType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilledDateFieldType");
                OnFilledDateFieldTypeChanged();
            }
        }
        private global::System.String _FilledDateFieldType;
        partial void OnFilledDateFieldTypeChanging(global::System.String value);
        partial void OnFilledDateFieldTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilledByFieldName
        {
            get
            {
                return _FilledByFieldName;
            }
            set
            {
                OnFilledByFieldNameChanging(value);
                ReportPropertyChanging("FilledByFieldName");
                _FilledByFieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilledByFieldName");
                OnFilledByFieldNameChanged();
            }
        }
        private global::System.String _FilledByFieldName;
        partial void OnFilledByFieldNameChanging(global::System.String value);
        partial void OnFilledByFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilledByFieldType
        {
            get
            {
                return _FilledByFieldType;
            }
            set
            {
                OnFilledByFieldTypeChanging(value);
                ReportPropertyChanging("FilledByFieldType");
                _FilledByFieldType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilledByFieldType");
                OnFilledByFieldTypeChanged();
            }
        }
        private global::System.String _FilledByFieldType;
        partial void OnFilledByFieldTypeChanging(global::System.String value);
        partial void OnFilledByFieldTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int32> _Port;
        partial void OnPortChanging(Nullable<global::System.Int32> value);
        partial void OnPortChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "FormQuestion", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("HOSTModel.FormQuestion", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("HOSTModel.FormQuestion", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="HelpImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HelpImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HelpImage object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        public static HelpImage CreateHelpImage(global::System.Int32 imageId)
        {
            HelpImage helpImage = new HelpImage();
            helpImage.ImageId = imageId;
            return helpImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "QuestionHelpImage", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("HOSTModel.QuestionHelpImage", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("HOSTModel.QuestionHelpImage", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("HOSTModel.QuestionHelpImage", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("HOSTModel.QuestionHelpImage", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Label")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Label : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Label object.
        /// </summary>
        /// <param name="labelId">Initial value of the LabelId property.</param>
        public static Label CreateLabel(global::System.Int32 labelId)
        {
            Label label = new Label();
            label.LabelId = labelId;
            return label;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LabelId
        {
            get
            {
                return _LabelId;
            }
            set
            {
                if (_LabelId != value)
                {
                    OnLabelIdChanging(value);
                    ReportPropertyChanging("LabelId");
                    _LabelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LabelId");
                    OnLabelIdChanged();
                }
            }
        }
        private global::System.Int32 _LabelId;
        partial void OnLabelIdChanging(global::System.Int32 value);
        partial void OnLabelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "LikertScaleQuestionLabel", "LikertScaleQuestion")]
        public LikertScaleQuestion LikertScaleQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LikertScaleQuestion>("HOSTModel.LikertScaleQuestionLabel", "LikertScaleQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LikertScaleQuestion>("HOSTModel.LikertScaleQuestionLabel", "LikertScaleQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LikertScaleQuestion> LikertScaleQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LikertScaleQuestion>("HOSTModel.LikertScaleQuestionLabel", "LikertScaleQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LikertScaleQuestion>("HOSTModel.LikertScaleQuestionLabel", "LikertScaleQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="LikertScaleQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LikertScaleQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LikertScaleQuestion object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="steps">Initial value of the Steps property.</param>
        public static LikertScaleQuestion CreateLikertScaleQuestion(global::System.Int32 questionId, global::System.Int32 sortOrder, global::System.Int32 steps)
        {
            LikertScaleQuestion likertScaleQuestion = new LikertScaleQuestion();
            likertScaleQuestion.QuestionId = questionId;
            likertScaleQuestion.SortOrder = sortOrder;
            likertScaleQuestion.Steps = steps;
            return likertScaleQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Steps
        {
            get
            {
                return _Steps;
            }
            set
            {
                OnStepsChanging(value);
                ReportPropertyChanging("Steps");
                _Steps = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Steps");
                OnStepsChanged();
            }
        }
        private global::System.Int32 _Steps;
        partial void OnStepsChanging(global::System.Int32 value);
        partial void OnStepsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "LikertScaleQuestionLabel", "Label")]
        public EntityCollection<Label> Labels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Label>("HOSTModel.LikertScaleQuestionLabel", "Label");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Label>("HOSTModel.LikertScaleQuestionLabel", "Label", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Option")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Option : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Option object.
        /// </summary>
        /// <param name="optionId">Initial value of the OptionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Option CreateOption(global::System.Int32 optionId, global::System.Int32 sortOrder)
        {
            Option option = new Option();
            option.OptionId = optionId;
            option.SortOrder = sortOrder;
            return option;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionId
        {
            get
            {
                return _OptionId;
            }
            set
            {
                if (_OptionId != value)
                {
                    OnOptionIdChanging(value);
                    ReportPropertyChanging("OptionId");
                    _OptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionId");
                    OnOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _OptionId;
        partial void OnOptionIdChanging(global::System.Int32 value);
        partial void OnOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "ChoiceQuestionOption", "ChoiceQuestion")]
        public ChoiceQuestion ChoiceQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceQuestion>("HOSTModel.ChoiceQuestionOption", "ChoiceQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceQuestion>("HOSTModel.ChoiceQuestionOption", "ChoiceQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChoiceQuestion> ChoiceQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceQuestion>("HOSTModel.ChoiceQuestionOption", "ChoiceQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChoiceQuestion>("HOSTModel.ChoiceQuestionOption", "ChoiceQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(LikertScaleQuestion))]
    [KnownTypeAttribute(typeof(ChoiceQuestion))]
    [KnownTypeAttribute(typeof(TextQuestion))]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Question CreateQuestion(global::System.Int32 questionId, global::System.Int32 sortOrder)
        {
            Question question = new Question();
            question.QuestionId = questionId;
            question.SortOrder = sortOrder;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                if (_QuestionId != value)
                {
                    OnQuestionIdChanging(value);
                    ReportPropertyChanging("QuestionId");
                    _QuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionId");
                    OnQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldType
        {
            get
            {
                return _FieldType;
            }
            set
            {
                OnFieldTypeChanging(value);
                ReportPropertyChanging("FieldType");
                _FieldType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldType");
                OnFieldTypeChanged();
            }
        }
        private global::System.String _FieldType;
        partial void OnFieldTypeChanging(global::System.String value);
        partial void OnFieldTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "FormQuestion", "Form")]
        public Form Form
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("HOSTModel.FormQuestion", "Form").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("HOSTModel.FormQuestion", "Form").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("HOSTModel.FormQuestion", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("HOSTModel.FormQuestion", "Form", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "QuestionHelpImage", "HelpImage")]
        public EntityCollection<HelpImage> HelpImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HelpImage>("HOSTModel.QuestionHelpImage", "HelpImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HelpImage>("HOSTModel.QuestionHelpImage", "HelpImage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String name)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.Name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "RoleUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("HOSTModel.RoleUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("HOSTModel.RoleUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="TextQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextQuestion object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static TextQuestion CreateTextQuestion(global::System.Int32 questionId, global::System.Int32 sortOrder)
        {
            TextQuestion textQuestion = new TextQuestion();
            textQuestion.QuestionId = questionId;
            textQuestion.SortOrder = sortOrder;
            return textQuestion;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOSTModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.String password)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = false;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOSTModel", "RoleUser", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HOSTModel.RoleUser", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HOSTModel.RoleUser", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HOSTModel.RoleUser", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("HOSTModel.RoleUser", "Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
