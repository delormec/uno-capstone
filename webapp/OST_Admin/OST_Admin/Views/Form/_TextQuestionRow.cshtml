@model OST_Admin.Models.TextQuestion
@{
    ViewBag.Title = "TextQuestionRow";

    //pulls viewbag from renderer
    var vb = ((dynamic)ViewData["vb"]);

    //which allows me to pass in what prefix my html elements should have (and question #)
    int id = vb.questionid;

    //appends a prefix to all my element names in this case [id]. this allows it to fit into a List<Question>
    ViewData.TemplateInfo.HtmlFieldPrefix = "[" + id + "]";
}
    <fieldset>
        <legend>Text Question</legend>
        <h2>Question: @id</h2>
       
        @Html.HiddenFor(model => model.QuestionId)
        @Html.HiddenFor(model => model.SortOrder)
        @Html.Hidden("ModelType", Model.GetType())

        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HelpText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HelpText)
            @Html.ValidationMessageFor(model => model.HelpText)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldName)
            @Html.ValidationMessageFor(model => model.FieldName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldType)
            @Html.ValidationMessageFor(model => model.FieldType)
        </div>
    </fieldset>
