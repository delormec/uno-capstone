@model OST_Admin.Models.LikertScaleQuestion
@{
    ViewBag.Title = "LikertScaleQuestionRow";
    
    //pulls viewbag from renderer
    var vb = ((dynamic)ViewData["vb"]);

    //which allows me to pass in what prefix my html elements should have (and question #)
    int id = vb.questionid;

    //need this in option area to add/remove them
    ViewBag.formid = Model.Form.FormId;
    ViewBag.questionid = Model.QuestionId;

    //appends a prefix to all my element names in this case [id]. this allows it to fit into a List<Question>
    ViewData.TemplateInfo.HtmlFieldPrefix = "[" + id + "]";

    int labelcount = 0;
}

        @Html.HiddenFor(model => model.QuestionId)
        <input type="hidden" value="@Model.SortOrder" name="[@id].SortOrder" id="QSortOrder"/>
        @Html.Hidden("ModelType", Model.GetType())

        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HelpText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HelpText)
            @Html.ValidationMessageFor(model => model.HelpText)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Steps)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Steps)
            @Html.ValidationMessageFor(model => model.Steps)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldName)
            @Html.ValidationMessageFor(model => model.FieldName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldType)
            @Html.ValidationMessageFor(model => model.FieldType)
        </div>

        @foreach (OST_Admin.Models.Label label in Model.Labels.OrderBy(l => l.LabelId))
        {
            @Html.Hidden("Labels[" + labelcount + "].LabelId", label.LabelId) 
            @Html.Hidden("Labels[" + labelcount + "].Range", label.Range)
                                                                                                                                                                              
        <div class="editor-label">
            @Html.LabelFor(l => label.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(l => label.Text, "", "Labels[" + labelcount + "].Text")
            @Html.ValidationMessageFor(l => label.Text)
        </div>
            
            labelcount++;
        }

  
